#!/bin/zsh

# --- 設定（すべてexportで環境変数化）---

# --- TODO: Setting ---
# Google Gemini APIキー
export GOOGLE_API_KEY="YOUR_GOOGLE_API_KEY_HERE"

# --- TODO: Setting ---
# 監視するボイスレコーダーのボリューム名
export RECORDER_NAME="V56_Howabo"

# --- TODO: Setting ---
# 音声ファイルが格納されているUSBデバイス内のサブディレクトリ名
export VOICE_FILES_SUBDIR="RECORD"

# --- TODO: Setting ---
# 音声ファイルを移動する先のローカルディレクトリ
export AUDIO_DEST_DIR="/Users/YOUR_USERNAME/Desktop/Voice2Text"

# --- TODO: Setting ---
# Markdown要約ファイルを出力する先のローカルディレクトリ
export MARKDOWN_OUTPUT_DIR="/Users/YOUR_USERNAME/Library/Mobile Documents/com~apple~CloudDocs/my_obsidian/💕Shihokky/🎙️Rec/V56"

# --- TODO: Setting ---
# 実行するPythonスクリプトのパス
export PYTHON_SCRIPT_PATH="./transcribe_summarize.py"

# --- TODO: Setting ---
# 要約時に使用するプロンプトファイルのパス
export SUMMARY_PROMPT_FILE_PATH="../prompt/summary_prompt.txt"

# --- TODO: Setting ---
# 処理済みログファイルのパス
export PROCESSED_LOG_FILE="../debug/processed_log.jsonl"

# --- TODO: Setting ---
# 対象とする音声ファイルの拡張子（find用配列）
TARGET_EXTENSIONS_ARRAY=(
    '-iname' '*.wav' '-o'
    '-iname' '*.WAV' '-o'
    '-iname' '*.mp3' '-o'
    '-iname' '*.MP3' '-o'
    '-iname' '*.m4a' '-o'
    '-iname' '*.M4A'
)
export TARGET_EXTENSIONS_ARRAY

# --- TODO: Setting ---
# 録音ファイル名のパターン（strftimeフォーマット）
# 例: "REC_%Y%m%d_%H%M%S" -> "REC_20240601_143025.wav"
# 例: "V%Y%m%d-%H%M%S" -> "V20240601-143025.wav"
export RECORDING_FILENAME_PATTERN="V%Y%m%d-%H%M%S"

# 音声再生速度設定（API料金削減のため）
# 例: 1.0 = 等速, 1.5 = 1.5倍速, 2.0 = 2倍速, 3.0 = 3倍速
# 高速化により文字起こし時間とAPI料金を削減できますが、音質が変わります
export AUDIO_SPEED_MULTIPLIER="1.5"

# --- 追加設定（リファクタリング対応） ---
# 一時チャンクファイル用ベースディレクトリ
export TEMP_CHUNK_BASE_DIR=".tmp_chunks"

# 処理済みファイル移動先（設定しない場合はAUDIO_DEST_DIR/doneを使用）
# export PROCESSED_FILES_DIR="/path/to/processed"

# ログファイルパス（設定しない場合はPROCESSED_LOG_FILEと同じディレクトリにprocessing.logを作成）
# export LOG_FILE_PATH="/path/to/processing.log"

# --- TODO: Setting ---
# 議事録ファイル名フォーマット設定
# 利用可能なプレースホルダー:
#   {date} - 録音日付（YYYYMMDD形式）
#   {title} - AIが生成したタイトル
# 例: "{date}_{title}" -> "20250827_会議議事録"
# 例: "{title}_{date}" -> "会議議事録_20250827"
# 例: "{date}-{title}" -> "20250827-会議議事録"
export MARKDOWN_FILENAME_FORMAT="{date}_{title}"



# --- TODO: Setting ---
# Obsidianデイリーノート設定
# デイリーノートのベースディレクトリパス
export OBSIDIAN_DAILY_NOTES_DIR="/Users/YOUR_USERNAME/Library/Mobile Documents/com~apple~CloudDocs/my_obsidian/🔒️Private/📅Daily Note"

# デイリーノートのファイル名パターン（strftimeフォーマット + 特別なプレースホルダー）
# 例: "%Y-%m-%d.md" -> "2025-08-15.md"
# 例: "%Y年%m月%d日.md" -> "2025年08月15日.md"
# 例: "📅%Y-%m-%d(%J).md" -> "📅2025-08-15(金).md"
# 特別なプレースホルダー: %J = 日本語曜日（月火水木金土日）
export DAILY_NOTE_FILENAME_PATTERN="📅%Y-%m-%d(%J).md"

# 議事録リンクを追加する見出し名
export DAILY_NOTE_HEADING="## 🎙️ トーク記録（Rec）"

# デイリーノートが存在しない場合に作成するかどうか (true/false)
export CREATE_DAILY_NOTE_IF_NOT_EXISTS="true"

# デイリーノートのテンプレート（新規作成時に使用）
export DAILY_NOTE_TEMPLATE="# %Y年%m月%d日

## 📝 今日のタスク

## 🎙️ 音声記録

## 📚 学習・読書

## 💭 メモ・気づき

## 🌟 今日の振り返り
"



# --- ここまで設定 ---

# 設定値の確認 (デバッグ用)
echo "--- config.sh 設定値 (スクリプト基準での解決前) --- "
echo "RECORDER_NAME: ${RECORDER_NAME}"
echo "AUDIO_DEST_DIR: ${AUDIO_DEST_DIR}"
echo "MARKDOWN_OUTPUT_DIR: ${MARKDOWN_OUTPUT_DIR}"
echo "PYTHON_SCRIPT_PATH: ${PYTHON_SCRIPT_PATH}"
echo "SUMMARY_PROMPT_FILE_PATH: ${SUMMARY_PROMPT_FILE_PATH}"
echo "PROCESSED_LOG_FILE: ${PROCESSED_LOG_FILE}"
echo "TARGET_EXTENSIONS_ARRAY (各要素):"
for element in "${TARGET_EXTENSIONS_ARRAY[@]}"; do
  echo "  - '$element'"
done
echo "RECORDING_FILENAME_PATTERN: ${RECORDING_FILENAME_PATTERN}"
echo "MARKDOWN_FILENAME_FORMAT: ${MARKDOWN_FILENAME_FORMAT}"
echo "OBSIDIAN_DAILY_NOTES_DIR: ${OBSIDIAN_DAILY_NOTES_DIR}"
echo "DAILY_NOTE_FILENAME_PATTERN: ${DAILY_NOTE_FILENAME_PATTERN}"
echo "DAILY_NOTE_HEADING: ${DAILY_NOTE_HEADING}"
echo "CREATE_DAILY_NOTE_IF_NOT_EXISTS: ${CREATE_DAILY_NOTE_IF_NOT_EXISTS}"
echo "-------------------------"

# 設定内容の確認用 (デバッグ時にコメントを外してください)
# echo "RECORDER_NAME: $RECORDER_NAME"
# echo "AUDIO_DEST_DIR: $AUDIO_DEST_DIR"
# echo "MARKDOWN_OUTPUT_DIR: $MARKDOWN_OUTPUT_DIR"
